name: Build Binaries

on:
  release:
    types:
      - published
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-x64
            target: bun-linux-x64
          - os: ubuntu-latest
            platform: linux-arm64
            target: bun-linux-arm64
          - os: macos-latest
            platform: darwin-x64
            target: bun-darwin-x64
          - os: macos-latest
            platform: darwin-arm64
            target: bun-darwin-arm64
          - os: windows-latest
            platform: win32-x64
            target: bun-windows-x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build binary
        run: bun build --compile --target=${{ matrix.target }} src/index.ts --outfile clp-mcp-${{ matrix.platform }}

      - name: Rename Windows binary
        if: matrix.platform == 'win32-x64'
        shell: bash
        run: mv clp-mcp-${{ matrix.platform }} clp-mcp-${{ matrix.platform }}.exe

      - name: Make binary executable
        if: runner.os != 'Windows'
        run: chmod +x clp-mcp-${{ matrix.platform }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: clp-mcp-${{ matrix.platform }}
          path: clp-mcp-${{ matrix.platform }}${{ matrix.platform == 'win32-x64' && '.exe' || '' }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries

      - name: Create checksums
        run: |
          cd binaries
          for dir in */; do
            cd "$dir"
            for file in *; do
              sha256sum "$file" > "$file.sha256"
            done
            cd ..
          done

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: binaries/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
